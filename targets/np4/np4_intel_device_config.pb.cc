// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: np4_intel_device_config.proto

#include "np4_intel_device_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_np4_5fintel_5fdevice_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_np4_5fintel_5fdevice_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_np4_5fintel_5fdevice_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_np4_5fintel_5fdevice_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto;
namespace pi {
namespace np4 {
class NP4DeviceConfig_DaemonDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NP4DeviceConfig_Daemon> _instance;
} _NP4DeviceConfig_Daemon_default_instance_;
class NP4DeviceConfig_AtomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NP4DeviceConfig_Atom> _instance;
} _NP4DeviceConfig_Atom_default_instance_;
class NP4DeviceConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NP4DeviceConfig> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  const ::pi::np4::NP4DeviceConfig_Daemon* daemon_;
} _NP4DeviceConfig_default_instance_;
class DPDKConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DPDKConfig> _instance;
} _DPDKConfig_default_instance_;
class NP4IntelDeviceConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NP4IntelDeviceConfig> _instance;
} _NP4IntelDeviceConfig_default_instance_;
}  // namespace np4
}  // namespace pi
static void InitDefaultsscc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pi::np4::_DPDKConfig_default_instance_;
    new (ptr) ::pi::np4::DPDKConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pi::np4::DPDKConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pi::np4::_NP4DeviceConfig_default_instance_;
    new (ptr) ::pi::np4::NP4DeviceConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pi::np4::NP4DeviceConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto}, {
      &scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto.base,
      &scc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pi::np4::_NP4DeviceConfig_Atom_default_instance_;
    new (ptr) ::pi::np4::NP4DeviceConfig_Atom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pi::np4::NP4DeviceConfig_Atom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pi::np4::_NP4DeviceConfig_Daemon_default_instance_;
    new (ptr) ::pi::np4::NP4DeviceConfig_Daemon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pi::np4::NP4DeviceConfig_Daemon::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pi::np4::_NP4IntelDeviceConfig_default_instance_;
    new (ptr) ::pi::np4::NP4IntelDeviceConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pi::np4::NP4IntelDeviceConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto}, {
      &scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base,
      &scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_np4_5fintel_5fdevice_5fconfig_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_np4_5fintel_5fdevice_5fconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_np4_5fintel_5fdevice_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_np4_5fintel_5fdevice_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig_Daemon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig_Daemon, host_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig_Daemon, port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig_Atom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig_Atom, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::pi::np4::NP4DeviceConfigDefaultTypeInternal, path_),
  offsetof(::pi::np4::NP4DeviceConfigDefaultTypeInternal, daemon_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig, atom_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig, fpga_bitstream_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4DeviceConfig, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pi::np4::DPDKConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pi::np4::DPDKConfig, bdf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4IntelDeviceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4IntelDeviceConfig, node_id_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4IntelDeviceConfig, np4_device_),
  PROTOBUF_FIELD_OFFSET(::pi::np4::NP4IntelDeviceConfig, dpdk_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pi::np4::NP4DeviceConfig_Daemon)},
  { 7, -1, sizeof(::pi::np4::NP4DeviceConfig_Atom)},
  { 13, -1, sizeof(::pi::np4::NP4DeviceConfig)},
  { 23, -1, sizeof(::pi::np4::DPDKConfig)},
  { 29, -1, sizeof(::pi::np4::NP4IntelDeviceConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pi::np4::_NP4DeviceConfig_Daemon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pi::np4::_NP4DeviceConfig_Atom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pi::np4::_NP4DeviceConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pi::np4::_DPDKConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pi::np4::_NP4IntelDeviceConfig_default_instance_),
};

const char descriptor_table_protodef_np4_5fintel_5fdevice_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035np4_intel_device_config.proto\022\006pi.np4\""
  "\333\001\n\017NP4DeviceConfig\022\016\n\004path\030\001 \001(\tH\000\0220\n\006d"
  "aemon\030\002 \001(\0132\036.pi.np4.NP4DeviceConfig.Dae"
  "monH\000\022*\n\004atom\030\003 \001(\0132\034.pi.np4.NP4DeviceCo"
  "nfig.Atom\022\026\n\016fpga_bitstream\030\004 \001(\014\032$\n\006Dae"
  "mon\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\032\022\n\004Atom\022"
  "\n\n\002id\030\001 \001(\rB\010\n\006device\"\031\n\nDPDKConfig\022\013\n\003b"
  "df\030\001 \001(\t\"v\n\024NP4IntelDeviceConfig\022\017\n\007node"
  "_id\030\001 \001(\004\022+\n\nnp4_device\030\002 \001(\0132\027.pi.np4.N"
  "P4DeviceConfig\022 \n\004dpdk\030\003 \001(\0132\022.pi.np4.DP"
  "DKConfigB\003\200\001\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_sccs[5] = {
  &scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base,
  &scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base,
  &scc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto.base,
  &scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto.base,
  &scc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_once;
static bool descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto = {
  &descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_initialized, descriptor_table_protodef_np4_5fintel_5fdevice_5fconfig_2eproto, "np4_intel_device_config.proto", 421,
  &descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_once, descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_sccs, descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_np4_5fintel_5fdevice_5fconfig_2eproto::offsets,
  file_level_metadata_np4_5fintel_5fdevice_5fconfig_2eproto, 5, file_level_enum_descriptors_np4_5fintel_5fdevice_5fconfig_2eproto, file_level_service_descriptors_np4_5fintel_5fdevice_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_np4_5fintel_5fdevice_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_np4_5fintel_5fdevice_5fconfig_2eproto), true);
namespace pi {
namespace np4 {

// ===================================================================

void NP4DeviceConfig_Daemon::InitAsDefaultInstance() {
}
class NP4DeviceConfig_Daemon::_Internal {
 public:
};

NP4DeviceConfig_Daemon::NP4DeviceConfig_Daemon()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pi.np4.NP4DeviceConfig.Daemon)
}
NP4DeviceConfig_Daemon::NP4DeviceConfig_Daemon(const NP4DeviceConfig_Daemon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:pi.np4.NP4DeviceConfig.Daemon)
}

void NP4DeviceConfig_Daemon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

NP4DeviceConfig_Daemon::~NP4DeviceConfig_Daemon() {
  // @@protoc_insertion_point(destructor:pi.np4.NP4DeviceConfig.Daemon)
  SharedDtor();
}

void NP4DeviceConfig_Daemon::SharedDtor() {
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NP4DeviceConfig_Daemon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NP4DeviceConfig_Daemon& NP4DeviceConfig_Daemon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NP4DeviceConfig_Daemon_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void NP4DeviceConfig_Daemon::Clear() {
// @@protoc_insertion_point(message_clear_start:pi.np4.NP4DeviceConfig.Daemon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

const char* NP4DeviceConfig_Daemon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_host(), ptr, ctx, "pi.np4.NP4DeviceConfig.Daemon.host");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NP4DeviceConfig_Daemon::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pi.np4.NP4DeviceConfig.Daemon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pi.np4.NP4DeviceConfig.Daemon.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pi.np4.NP4DeviceConfig.Daemon)
  return target;
}

size_t NP4DeviceConfig_Daemon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pi.np4.NP4DeviceConfig.Daemon)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NP4DeviceConfig_Daemon::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pi.np4.NP4DeviceConfig.Daemon)
  GOOGLE_DCHECK_NE(&from, this);
  const NP4DeviceConfig_Daemon* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NP4DeviceConfig_Daemon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pi.np4.NP4DeviceConfig.Daemon)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pi.np4.NP4DeviceConfig.Daemon)
    MergeFrom(*source);
  }
}

void NP4DeviceConfig_Daemon::MergeFrom(const NP4DeviceConfig_Daemon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pi.np4.NP4DeviceConfig.Daemon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void NP4DeviceConfig_Daemon::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pi.np4.NP4DeviceConfig.Daemon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NP4DeviceConfig_Daemon::CopyFrom(const NP4DeviceConfig_Daemon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pi.np4.NP4DeviceConfig.Daemon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NP4DeviceConfig_Daemon::IsInitialized() const {
  return true;
}

void NP4DeviceConfig_Daemon::InternalSwap(NP4DeviceConfig_Daemon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NP4DeviceConfig_Daemon::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NP4DeviceConfig_Atom::InitAsDefaultInstance() {
}
class NP4DeviceConfig_Atom::_Internal {
 public:
};

NP4DeviceConfig_Atom::NP4DeviceConfig_Atom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pi.np4.NP4DeviceConfig.Atom)
}
NP4DeviceConfig_Atom::NP4DeviceConfig_Atom(const NP4DeviceConfig_Atom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pi.np4.NP4DeviceConfig.Atom)
}

void NP4DeviceConfig_Atom::SharedCtor() {
  id_ = 0u;
}

NP4DeviceConfig_Atom::~NP4DeviceConfig_Atom() {
  // @@protoc_insertion_point(destructor:pi.np4.NP4DeviceConfig.Atom)
  SharedDtor();
}

void NP4DeviceConfig_Atom::SharedDtor() {
}

void NP4DeviceConfig_Atom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NP4DeviceConfig_Atom& NP4DeviceConfig_Atom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NP4DeviceConfig_Atom_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void NP4DeviceConfig_Atom::Clear() {
// @@protoc_insertion_point(message_clear_start:pi.np4.NP4DeviceConfig.Atom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* NP4DeviceConfig_Atom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NP4DeviceConfig_Atom::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pi.np4.NP4DeviceConfig.Atom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pi.np4.NP4DeviceConfig.Atom)
  return target;
}

size_t NP4DeviceConfig_Atom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pi.np4.NP4DeviceConfig.Atom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NP4DeviceConfig_Atom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pi.np4.NP4DeviceConfig.Atom)
  GOOGLE_DCHECK_NE(&from, this);
  const NP4DeviceConfig_Atom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NP4DeviceConfig_Atom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pi.np4.NP4DeviceConfig.Atom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pi.np4.NP4DeviceConfig.Atom)
    MergeFrom(*source);
  }
}

void NP4DeviceConfig_Atom::MergeFrom(const NP4DeviceConfig_Atom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pi.np4.NP4DeviceConfig.Atom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void NP4DeviceConfig_Atom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pi.np4.NP4DeviceConfig.Atom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NP4DeviceConfig_Atom::CopyFrom(const NP4DeviceConfig_Atom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pi.np4.NP4DeviceConfig.Atom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NP4DeviceConfig_Atom::IsInitialized() const {
  return true;
}

void NP4DeviceConfig_Atom::InternalSwap(NP4DeviceConfig_Atom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NP4DeviceConfig_Atom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NP4DeviceConfig::InitAsDefaultInstance() {
  ::pi::np4::_NP4DeviceConfig_default_instance_.path_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::pi::np4::_NP4DeviceConfig_default_instance_.daemon_ = const_cast< ::pi::np4::NP4DeviceConfig_Daemon*>(
      ::pi::np4::NP4DeviceConfig_Daemon::internal_default_instance());
  ::pi::np4::_NP4DeviceConfig_default_instance_._instance.get_mutable()->atom_ = const_cast< ::pi::np4::NP4DeviceConfig_Atom*>(
      ::pi::np4::NP4DeviceConfig_Atom::internal_default_instance());
}
class NP4DeviceConfig::_Internal {
 public:
  static const ::pi::np4::NP4DeviceConfig_Daemon& daemon(const NP4DeviceConfig* msg);
  static const ::pi::np4::NP4DeviceConfig_Atom& atom(const NP4DeviceConfig* msg);
};

const ::pi::np4::NP4DeviceConfig_Daemon&
NP4DeviceConfig::_Internal::daemon(const NP4DeviceConfig* msg) {
  return *msg->device_.daemon_;
}
const ::pi::np4::NP4DeviceConfig_Atom&
NP4DeviceConfig::_Internal::atom(const NP4DeviceConfig* msg) {
  return *msg->atom_;
}
void NP4DeviceConfig::set_allocated_daemon(::pi::np4::NP4DeviceConfig_Daemon* daemon) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_device();
  if (daemon) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      daemon = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, daemon, submessage_arena);
    }
    set_has_daemon();
    device_.daemon_ = daemon;
  }
  // @@protoc_insertion_point(field_set_allocated:pi.np4.NP4DeviceConfig.daemon)
}
NP4DeviceConfig::NP4DeviceConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pi.np4.NP4DeviceConfig)
}
NP4DeviceConfig::NP4DeviceConfig(const NP4DeviceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fpga_bitstream_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fpga_bitstream().empty()) {
    fpga_bitstream_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fpga_bitstream_);
  }
  if (from._internal_has_atom()) {
    atom_ = new ::pi::np4::NP4DeviceConfig_Atom(*from.atom_);
  } else {
    atom_ = nullptr;
  }
  clear_has_device();
  switch (from.device_case()) {
    case kPath: {
      _internal_set_path(from._internal_path());
      break;
    }
    case kDaemon: {
      _internal_mutable_daemon()->::pi::np4::NP4DeviceConfig_Daemon::MergeFrom(from._internal_daemon());
      break;
    }
    case DEVICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pi.np4.NP4DeviceConfig)
}

void NP4DeviceConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  fpga_bitstream_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  atom_ = nullptr;
  clear_has_device();
}

NP4DeviceConfig::~NP4DeviceConfig() {
  // @@protoc_insertion_point(destructor:pi.np4.NP4DeviceConfig)
  SharedDtor();
}

void NP4DeviceConfig::SharedDtor() {
  fpga_bitstream_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete atom_;
  if (has_device()) {
    clear_device();
  }
}

void NP4DeviceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NP4DeviceConfig& NP4DeviceConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NP4DeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void NP4DeviceConfig::clear_device() {
// @@protoc_insertion_point(one_of_clear_start:pi.np4.NP4DeviceConfig)
  switch (device_case()) {
    case kPath: {
      device_.path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDaemon: {
      delete device_.daemon_;
      break;
    }
    case DEVICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEVICE_NOT_SET;
}


void NP4DeviceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pi.np4.NP4DeviceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fpga_bitstream_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && atom_ != nullptr) {
    delete atom_;
  }
  atom_ = nullptr;
  clear_device();
  _internal_metadata_.Clear();
}

const char* NP4DeviceConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_path(), ptr, ctx, "pi.np4.NP4DeviceConfig.path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pi.np4.NP4DeviceConfig.Daemon daemon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_daemon(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pi.np4.NP4DeviceConfig.Atom atom = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_atom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes fpga_bitstream = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(_internal_mutable_fpga_bitstream(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NP4DeviceConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pi.np4.NP4DeviceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (_internal_has_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pi.np4.NP4DeviceConfig.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .pi.np4.NP4DeviceConfig.Daemon daemon = 2;
  if (_internal_has_daemon()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::daemon(this), target, stream);
  }

  // .pi.np4.NP4DeviceConfig.Atom atom = 3;
  if (this->has_atom()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::atom(this), target, stream);
  }

  // bytes fpga_bitstream = 4;
  if (this->fpga_bitstream().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_fpga_bitstream(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pi.np4.NP4DeviceConfig)
  return target;
}

size_t NP4DeviceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pi.np4.NP4DeviceConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes fpga_bitstream = 4;
  if (this->fpga_bitstream().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_fpga_bitstream());
  }

  // .pi.np4.NP4DeviceConfig.Atom atom = 3;
  if (this->has_atom()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *atom_);
  }

  switch (device_case()) {
    // string path = 1;
    case kPath: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_path());
      break;
    }
    // .pi.np4.NP4DeviceConfig.Daemon daemon = 2;
    case kDaemon: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *device_.daemon_);
      break;
    }
    case DEVICE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NP4DeviceConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pi.np4.NP4DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NP4DeviceConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NP4DeviceConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pi.np4.NP4DeviceConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pi.np4.NP4DeviceConfig)
    MergeFrom(*source);
  }
}

void NP4DeviceConfig::MergeFrom(const NP4DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pi.np4.NP4DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fpga_bitstream().size() > 0) {

    fpga_bitstream_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fpga_bitstream_);
  }
  if (from.has_atom()) {
    _internal_mutable_atom()->::pi::np4::NP4DeviceConfig_Atom::MergeFrom(from._internal_atom());
  }
  switch (from.device_case()) {
    case kPath: {
      _internal_set_path(from._internal_path());
      break;
    }
    case kDaemon: {
      _internal_mutable_daemon()->::pi::np4::NP4DeviceConfig_Daemon::MergeFrom(from._internal_daemon());
      break;
    }
    case DEVICE_NOT_SET: {
      break;
    }
  }
}

void NP4DeviceConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pi.np4.NP4DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NP4DeviceConfig::CopyFrom(const NP4DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pi.np4.NP4DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NP4DeviceConfig::IsInitialized() const {
  return true;
}

void NP4DeviceConfig::InternalSwap(NP4DeviceConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fpga_bitstream_.Swap(&other->fpga_bitstream_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(atom_, other->atom_);
  swap(device_, other->device_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata NP4DeviceConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DPDKConfig::InitAsDefaultInstance() {
}
class DPDKConfig::_Internal {
 public:
};

DPDKConfig::DPDKConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pi.np4.DPDKConfig)
}
DPDKConfig::DPDKConfig(const DPDKConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bdf().empty()) {
    bdf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bdf_);
  }
  // @@protoc_insertion_point(copy_constructor:pi.np4.DPDKConfig)
}

void DPDKConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  bdf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DPDKConfig::~DPDKConfig() {
  // @@protoc_insertion_point(destructor:pi.np4.DPDKConfig)
  SharedDtor();
}

void DPDKConfig::SharedDtor() {
  bdf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DPDKConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DPDKConfig& DPDKConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DPDKConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DPDKConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pi.np4.DPDKConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DPDKConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string bdf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_bdf(), ptr, ctx, "pi.np4.DPDKConfig.bdf");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DPDKConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pi.np4.DPDKConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bdf = 1;
  if (this->bdf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bdf().data(), static_cast<int>(this->_internal_bdf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pi.np4.DPDKConfig.bdf");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bdf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pi.np4.DPDKConfig)
  return target;
}

size_t DPDKConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pi.np4.DPDKConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bdf = 1;
  if (this->bdf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bdf());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DPDKConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pi.np4.DPDKConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DPDKConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DPDKConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pi.np4.DPDKConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pi.np4.DPDKConfig)
    MergeFrom(*source);
  }
}

void DPDKConfig::MergeFrom(const DPDKConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pi.np4.DPDKConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdf().size() > 0) {

    bdf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bdf_);
  }
}

void DPDKConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pi.np4.DPDKConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DPDKConfig::CopyFrom(const DPDKConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pi.np4.DPDKConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DPDKConfig::IsInitialized() const {
  return true;
}

void DPDKConfig::InternalSwap(DPDKConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bdf_.Swap(&other->bdf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DPDKConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NP4IntelDeviceConfig::InitAsDefaultInstance() {
  ::pi::np4::_NP4IntelDeviceConfig_default_instance_._instance.get_mutable()->np4_device_ = const_cast< ::pi::np4::NP4DeviceConfig*>(
      ::pi::np4::NP4DeviceConfig::internal_default_instance());
  ::pi::np4::_NP4IntelDeviceConfig_default_instance_._instance.get_mutable()->dpdk_ = const_cast< ::pi::np4::DPDKConfig*>(
      ::pi::np4::DPDKConfig::internal_default_instance());
}
class NP4IntelDeviceConfig::_Internal {
 public:
  static const ::pi::np4::NP4DeviceConfig& np4_device(const NP4IntelDeviceConfig* msg);
  static const ::pi::np4::DPDKConfig& dpdk(const NP4IntelDeviceConfig* msg);
};

const ::pi::np4::NP4DeviceConfig&
NP4IntelDeviceConfig::_Internal::np4_device(const NP4IntelDeviceConfig* msg) {
  return *msg->np4_device_;
}
const ::pi::np4::DPDKConfig&
NP4IntelDeviceConfig::_Internal::dpdk(const NP4IntelDeviceConfig* msg) {
  return *msg->dpdk_;
}
NP4IntelDeviceConfig::NP4IntelDeviceConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pi.np4.NP4IntelDeviceConfig)
}
NP4IntelDeviceConfig::NP4IntelDeviceConfig(const NP4IntelDeviceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_np4_device()) {
    np4_device_ = new ::pi::np4::NP4DeviceConfig(*from.np4_device_);
  } else {
    np4_device_ = nullptr;
  }
  if (from._internal_has_dpdk()) {
    dpdk_ = new ::pi::np4::DPDKConfig(*from.dpdk_);
  } else {
    dpdk_ = nullptr;
  }
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:pi.np4.NP4IntelDeviceConfig)
}

void NP4IntelDeviceConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  ::memset(&np4_device_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&np4_device_)) + sizeof(node_id_));
}

NP4IntelDeviceConfig::~NP4IntelDeviceConfig() {
  // @@protoc_insertion_point(destructor:pi.np4.NP4IntelDeviceConfig)
  SharedDtor();
}

void NP4IntelDeviceConfig::SharedDtor() {
  if (this != internal_default_instance()) delete np4_device_;
  if (this != internal_default_instance()) delete dpdk_;
}

void NP4IntelDeviceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NP4IntelDeviceConfig& NP4IntelDeviceConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NP4IntelDeviceConfig_np4_5fintel_5fdevice_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void NP4IntelDeviceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pi.np4.NP4IntelDeviceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && np4_device_ != nullptr) {
    delete np4_device_;
  }
  np4_device_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dpdk_ != nullptr) {
    delete dpdk_;
  }
  dpdk_ = nullptr;
  node_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* NP4IntelDeviceConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pi.np4.NP4DeviceConfig np4_device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_np4_device(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pi.np4.DPDKConfig dpdk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dpdk(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NP4IntelDeviceConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pi.np4.NP4IntelDeviceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 node_id = 1;
  if (this->node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_node_id(), target);
  }

  // .pi.np4.NP4DeviceConfig np4_device = 2;
  if (this->has_np4_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::np4_device(this), target, stream);
  }

  // .pi.np4.DPDKConfig dpdk = 3;
  if (this->has_dpdk()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::dpdk(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pi.np4.NP4IntelDeviceConfig)
  return target;
}

size_t NP4IntelDeviceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pi.np4.NP4IntelDeviceConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pi.np4.NP4DeviceConfig np4_device = 2;
  if (this->has_np4_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *np4_device_);
  }

  // .pi.np4.DPDKConfig dpdk = 3;
  if (this->has_dpdk()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dpdk_);
  }

  // uint64 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_node_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NP4IntelDeviceConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pi.np4.NP4IntelDeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NP4IntelDeviceConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NP4IntelDeviceConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pi.np4.NP4IntelDeviceConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pi.np4.NP4IntelDeviceConfig)
    MergeFrom(*source);
  }
}

void NP4IntelDeviceConfig::MergeFrom(const NP4IntelDeviceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pi.np4.NP4IntelDeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_np4_device()) {
    _internal_mutable_np4_device()->::pi::np4::NP4DeviceConfig::MergeFrom(from._internal_np4_device());
  }
  if (from.has_dpdk()) {
    _internal_mutable_dpdk()->::pi::np4::DPDKConfig::MergeFrom(from._internal_dpdk());
  }
  if (from.node_id() != 0) {
    _internal_set_node_id(from._internal_node_id());
  }
}

void NP4IntelDeviceConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pi.np4.NP4IntelDeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NP4IntelDeviceConfig::CopyFrom(const NP4IntelDeviceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pi.np4.NP4IntelDeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NP4IntelDeviceConfig::IsInitialized() const {
  return true;
}

void NP4IntelDeviceConfig::InternalSwap(NP4IntelDeviceConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(np4_device_, other->np4_device_);
  swap(dpdk_, other->dpdk_);
  swap(node_id_, other->node_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NP4IntelDeviceConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace np4
}  // namespace pi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pi::np4::NP4DeviceConfig_Daemon* Arena::CreateMaybeMessage< ::pi::np4::NP4DeviceConfig_Daemon >(Arena* arena) {
  return Arena::CreateInternal< ::pi::np4::NP4DeviceConfig_Daemon >(arena);
}
template<> PROTOBUF_NOINLINE ::pi::np4::NP4DeviceConfig_Atom* Arena::CreateMaybeMessage< ::pi::np4::NP4DeviceConfig_Atom >(Arena* arena) {
  return Arena::CreateInternal< ::pi::np4::NP4DeviceConfig_Atom >(arena);
}
template<> PROTOBUF_NOINLINE ::pi::np4::NP4DeviceConfig* Arena::CreateMaybeMessage< ::pi::np4::NP4DeviceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::pi::np4::NP4DeviceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::pi::np4::DPDKConfig* Arena::CreateMaybeMessage< ::pi::np4::DPDKConfig >(Arena* arena) {
  return Arena::CreateInternal< ::pi::np4::DPDKConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::pi::np4::NP4IntelDeviceConfig* Arena::CreateMaybeMessage< ::pi::np4::NP4IntelDeviceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::pi::np4::NP4IntelDeviceConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
